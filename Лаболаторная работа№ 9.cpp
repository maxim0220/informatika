// Лаболаторная работа№ 9.cpp : Этот файл содержит функцию "main". Здесь начинается и заканчивается выполнение программы.
//
#include <iostream>
#include <fstream>
#include <cstdlib>

using namespace std;

int main(void)
{
    int  i,s=0,m=0 ;
    string x[256];
   
    /*создаем объект F1, который создаст файл file.txt
    циклом for заполнеяем файл из массива x[10]] */
    ofstream F1("file.txt", ios_base::trunc);
    for (int i = 0; i < 10; i++) {
        cin >> x[i];
        F1 << x[i] << endl;
    }
    /* создаем объект,чтобы считать из файла file.txt данные*/
    ifstream F1_1("file.txt");
    string k[10];
    for (i = 0; !F1_1.eof(); i++) {
        F1_1 >> k[i];
    }
    /* создаем объект F2 ,в который записываем из массива k*/
    ofstream F2("file2.txt", ios_base::trunc);
    for (int i = 4; i <= 6; i++) {
        F2 << k[i] << endl;
        char consonant[] = "Q""W""R""T""P""S""D""F""G""H""J""K""L""Z""X""C""V""B""N""M""q""w""r""t""p""s""d""f""g""h""j""k""l""z""x""c""v""b""n""m";
        if (k[i] == consonant)
            s=s++;
    }
   
    cout <<"  "<<  s;
    return 0;
}
// Запуск программы: CTRL+F5 или меню "Отладка" > "Запуск без отладки"
// Отладка программы: F5 или меню "Отладка" > "Запустить отладку"

// Советы по началу работы 
//   1. В окне обозревателя решений можно добавлять файлы и управлять ими.
//   2. В окне Team Explorer можно подключиться к системе управления версиями.
//   3. В окне "Выходные данные" можно просматривать выходные данные сборки и другие сообщения.
//   4. В окне "Список ошибок" можно просматривать ошибки.
//   5. Последовательно выберите пункты меню "Проект" > "Добавить новый элемент", чтобы создать файлы кода, или "Проект" > "Добавить существующий элемент", чтобы добавить в проект существующие файлы кода.
//   6. Чтобы снова открыть этот проект позже, выберите пункты меню "Файл" > "Открыть" > "Проект" и выберите SLN-файл.
